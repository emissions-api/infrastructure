---

- hosts: server
  become: yes
  vars_files:
    - secret-vars.yml
  tasks:
    - name: install needed software
      package:
        name:
          - git
          - python3

    - name: install RedHat specific software
      package:
        name:
          - cmake3
          - gcc
          - make
          - postgresql-devel
          - python3-devel
      when: ansible_os_family == 'RedHat'

    - name: install Debian specific software
      package:
        name:
          - python3-venv
          - python3-dev
          - build-essential
          - cmake
          - libpq-dev
      when: ansible_os_family == 'Debian'

    - name: create Emissions-API user
      user:
        name: emissions-api
        system: yes
        home: /opt/emissions-api

    - name: create data directory
      file:
        path: /opt/emissions-api/data/
        owner: emissions-api
        group: emissions-api
        state: directory

    - name: create python environment
      become_user: emissions-api
      command: python3 -m venv /opt/emissions-api/env
      args:
        creates: /opt/emissions-api/env

    - name: clone Emissions-API repository
      become_user: emissions-api
      command: git clone https://github.com/emissions-api/emissions-api.git /opt/emissions-api/emissions-api
      args:
        creates: /opt/emissions-api/emissions-api

    # Workaround for python h3. It is using cmake > 3.1 which is called cmake3 on Amazon Linux 2
    - name: link cmake to cmake3
      file:
        state: link
        path: /bin/cmake
        src: /bin/cmake3
      when: ansible_distribution == "Amazon"

    - name: install Emissions-API requirements
      become_user: emissions-api
      command: /opt/emissions-api/env/bin/pip install -r /opt/emissions-api/emissions-api/requirements.txt

    - name: install Emissions-API config file
      copy:
        content: |
            ---

            database: postgresql://emissionsapi:{{ database_emissionsapi_password }}@{{database_hostname | default("127.0.0.1")}}/emissionsapi
            storage: /opt/emissions-api/data/
        dest: /opt/emissions-api/emissions-api/emissionsapi.yml
        force: yes
        owner: emissions-api
        group: emissions-api
        mode: 0600
      notify:
        restart emissionsapi-web

    - name: install Emissions-API service file
      copy:
        dest: /lib/systemd/system/emissionsapi-web.service
        content: |
            [Unit]
            Description=Emissions API Web Service

            [Service]
            ExecStart=/opt/emissions-api/env/bin/gunicorn --workers 4 --timeout 120 emissionsapi.web:app
            WorkingDirectory=/opt/emissions-api/emissions-api/
            User=emissions-api
            RestartSec=5
            Restart=always

            [Install]
            WantedBy=multi-user.target
        force: yes
      notify:
        - reload systemd
        - restart emissionsapi-web

    - name: run Emissions-API now and on boot
      service:
        name: emissionsapi-web
        enabled: yes
        state: started

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: restart emissionsapi-web
      service:
        name: emissionsapi-web
        state: restarted
