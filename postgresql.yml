---

- hosts: server
  become: yes
  vars_files:
    - secret-vars.yml
  tasks:

    - name: fail early if OS is not supported
      assert:
        that: ansible_os_family == 'Debian'

    - name: install needed software
      package:
        name:
          - postgresql
          - postgis
          - python-psycopg2

    - name: create emissionsapi postgresql user
      become: yes
      become_user: postgres
      postgresql_user:
        user: emissionsapi
        password: '{{ database_emissionsapi_password }}'
        encrypted: yes

    - name: create emissionsapi database
      become: yes
      become_user: postgres
      postgresql_db:
        name: emissionsapi
        owner: emissionsapi

    - name: enable PostGIS extensions
      become: yes
      become_user: postgres
      postgresql_ext:
        db: emissionsapi
        name: '{{ item }}'
      loop:
        - postgis
        - postgis_topology
        - postgis_sfcgal
        - fuzzystrmatch
        - address_standardizer
        - address_standardizer_data_us
        - postgis_tiger_geocoder

    - name: configure PostgreSQL
      copy:
        force: yes
        src: postgresql/pgtune.conf
        dest: /etc/postgresql/11/main/conf.d/pgtune.conf
      notify:
        - restart postgresql

  handlers:
    - name: restart postgresql
      service:
        name: postgresql
        state: restarted
